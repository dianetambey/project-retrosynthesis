def amine_disconnection (mol: Chem.rdchem.Mol) ->int:
    
    if mol.HasSubstructMatch(Chem.MolFromSmarts('[^3][N]')):
        print (f"Amine disconnection available")
        print (f"--------------------------------------")
        carbonyl_smiles = 'O'
        Chloro_smiles='[Cl]'
        LiAlH4_smiles ='C(=O)([O-])[O-].[K+].[K+]'
        carbonyl = Chem.MolFromSmiles(carbonyl_smiles)
        Chloro = Chem.MolFromSmiles(Chloro_smiles)
        LiAlH4 = Chem.MolFromSmiles(LiAlH4_smiles)
        rxn = AllChem.ReactionFromSmarts('[N:1][C^3:2].[Cl:3][O:4]>>[N:1].[C^2]=[O:4][Cl]')
        reactants = unique_list_reactants(rxn.RunReactants((mol,LiAlH4 )))
        opt = 1 #Parameter to count the number of possible reactants that form C(sp3 hybridized)-S bonds
        for r in reactants: #Prints the reactants
            print(f"Option {opt}")
            reactant_1 = [r[0]]
            reactant_2 = [r[1], LiAlH4]
            print(f"Reactant 1")
            display(Draw.MolsToGridImage(reactant_1))
            print(f"Reactant 2")
            display(Draw.MolsToGridImage(reactant_2))
            opt += 1
            print (f"--------------------------------------")
        print(f"--------------------------------------")
        print (f"This product needs to be reduced using LiAlH4"
               f" in order to obtain the target molecule")
        print (f"--------------------------------------")
        return 1
    return 0
